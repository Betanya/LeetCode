class Solution(object):
    def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        #if the value is a negative number, then it is not a palindome.
        if x < 0:
            return False
        
        #create an array of integers from number "x" aka, the given number.
        #The [] indicated that it would be an array.
        #int turned them into ints
        
        fwdList = [int(d) for d in str(x)]
        print (fwdList)
        
        #create a list which is the reverse of the org. list
        bckList = fwdList[::-1]
        print (bckList)
        
        #convert them into numbers. 
        #i being index, value being the value of the index.
        #sum adds the values generated by the for loop to a single value.
        
        # More specifically:
        # By making the index a power of ten, it creates place values perfect for summation. 100 + 20 + 1 = 121. 
        # The (value * 10**i) happens everytime the for loop continues down the given list. 
        numFwd = sum(value * 10**i for i, value in enumerate(bckList)) 
        numBck = sum(value * 10**i for i, value in enumerate(fwdList)) 
        
        print (numFwd)
        print (numBck)
        
        #if the numbers are the same, return true, else return false
        
        if numFwd == numBck:
            return True
        else: 
            return False
        
           
